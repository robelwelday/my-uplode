{"version":3,"file":"static/js/358.34aa8587.chunk.js","mappings":"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","sources":["pages/AdminDashboard.js","api/api.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../api/api\";\n\nfunction AdminDashboard() {\n  const navigate = useNavigate();\n  const [products, setProducts] = useState([]);\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newProduct, setNewProduct] = useState({\n    name: { en: \"\", am: \"\", ti: \"\" },\n    description: { en: \"\", am: \"\", ti: \"\" },\n    price: \"\",\n    image: null,\n  });\n  const [newNews, setNewNews] = useState({\n    title: {},\n    content: {},\n    coverImage: null,\n  });\n  const [editingProduct, setEditingProduct] = useState(null); // Track the product being edited\n  const [updatedProduct, setUpdatedProduct] = useState(null); // State for edited product fields\n  const [editingNews, setEditingNews] = useState(null); // Track the news being edited\n  const [updatedNews, setUpdatedNews] = useState(null); // State for edited news fields\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"adminToken\");\n    if (!token) {\n      navigate(\"/admin/login\");\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    Promise.all([\n      api.get(\"/api/products\").then((res) => setProducts(res.data)).catch((err) => { throw new Error('Failed to load products'); }),\n      api.get(\"/api/news\").then((res) => setNews(res.data)).catch((err) => { throw new Error('Failed to load news'); })\n    ]).catch((err) => {\n      setError(err.message);\n    }).finally(() => setLoading(false));\n  }, [navigate]);\n\n  const handleDeleteProduct = async (id) => {\n    try {\n      const token = localStorage.getItem(\"adminToken\"); // Retrieve the token\n      await api.delete(`/api/products/${id}`, {\n        headers: { Authorization: `Bearer ${token}` }, // Include the token in the headers\n      });\n      setProducts((prev) => prev.filter((p) => p._id !== id)); // Update state correctly\n    } catch (err) {\n      console.error(\"Failed to delete product:\", err);\n    }\n  };\n\n  const handleDeleteNews = async (id) => {\n    try {\n      const token = localStorage.getItem(\"adminToken\"); // Retrieve the token\n      await api.delete(`/api/news/${id}`, {\n        headers: { Authorization: `Bearer ${token}` }, // Include the token in the headers\n      });\n      setNews((prev) => prev.filter((n) => n._id !== id)); // Update state correctly\n    } catch (err) {\n      console.error(\"Failed to delete news:\", err);\n    }\n  };\n\n  const handleAddProduct = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", JSON.stringify(newProduct.name)); // Stringify the name object\n    formData.append(\"description\", JSON.stringify(newProduct.description)); // Stringify the description object\n    formData.append(\"price\", newProduct.price);\n    if (newProduct.image) {\n      formData.append(\"image\", newProduct.image); // Ensure image is appended\n    }\n\n    console.log(\"FormData for product:\", Object.fromEntries(formData)); // Debugging: Log FormData\n\n    try {\n      const token = localStorage.getItem(\"adminToken\"); // Ensure token is included\n      const res = await api.post(\"/api/products\", formData, {\n        headers: {\n          Authorization: `Bearer ${token}`, // Include Authorization header\n        },\n      });\n      setProducts((prev) => [...prev, res.data]); // Update state correctly\n      setNewProduct({\n        name: { en: \"\", am: \"\", ti: \"\" },\n        description: { en: \"\", am: \"\", ti: \"\" },\n        price: \"\",\n        image: null,\n      });\n      e.target.reset(); // Reset the form\n    } catch (err) {\n      console.error(\"Failed to add product:\", err.response?.data || err.message);\n    }\n  };\n\n  const handleAddNews = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", JSON.stringify(newNews.title)); // Stringify the title object\n    formData.append(\"content\", JSON.stringify(newNews.content)); // Stringify the content object\n    if (newNews.coverImage) {\n      formData.append(\"coverImage\", newNews.coverImage); // Ensure coverImage is appended\n    }\n\n    console.log(\"FormData for news:\", Object.fromEntries(formData)); // Debugging: Log FormData\n\n    try {\n      const token = localStorage.getItem(\"adminToken\"); // Ensure token is included\n      const res = await api.post(\"/api/news\", formData, {\n        headers: {\n          Authorization: `Bearer ${token}`, // Include Authorization header\n        },\n      });\n      setNews((prev) => [...prev, res.data]); // Update state correctly\n      setNewNews({\n        title: {},\n        content: {},\n        coverImage: null,\n      });\n      e.target.reset(); // Reset the form\n    } catch (err) {\n      console.error(\"Failed to add news:\", err.response?.data || err.message);\n    }\n  };\n\n  const handleUpdateProduct = async (e) => {\n    e.preventDefault();\n    if (!editingProduct) return;\n\n    const formData = new FormData();\n    formData.append(\"name\", JSON.stringify(updatedProduct.name));\n    formData.append(\"description\", JSON.stringify(updatedProduct.description));\n    if (updatedProduct.image instanceof File) {\n      formData.append(\"image\", updatedProduct.image);\n    }\n\n    try {\n      const token = localStorage.getItem(\"adminToken\");\n      const res = await api.patch(\n        `/api/products/${editingProduct._id}`,\n        formData,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n      setProducts((prev) =>\n        prev.map((p) => (p._id === editingProduct._id ? res.data : p))\n      );\n      setEditingProduct(null);\n      setUpdatedProduct(null);\n    } catch (err) {\n      console.error(\"Failed to update product:\", err.response?.data || err.message);\n    }\n  };\n\n  const handleUpdateNews = async (e) => {\n    e.preventDefault();\n    if (!editingNews) return;\n\n    const formData = new FormData();\n    formData.append(\"title\", JSON.stringify(updatedNews.title));\n    formData.append(\"content\", JSON.stringify(updatedNews.content));\n    if (updatedNews.coverImage instanceof File) {\n      formData.append(\"coverImage\", updatedNews.coverImage);\n    }\n\n    try {\n      const token = localStorage.getItem(\"adminToken\");\n      const res = await api.patch(`/api/news/${editingNews._id}`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setNews((prev) =>\n        prev.map((n) => (n._id === editingNews._id ? res.data : n))\n      );\n      setEditingNews(null);\n      setUpdatedNews(null);\n    } catch (err) {\n      console.error(\"Failed to update news:\", err.response?.data || err.message);\n    }\n  };\n\n  const handleToggleAvailability = async (id, currentStatus) => {\n    try {\n      const token = localStorage.getItem(\"adminToken\");\n      const res = await api.put(\n        `/api/products/${id}/toggle-availability`,\n        { available: !currentStatus },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      setProducts((prev) =>\n        prev.map((p) => (p._id === id ? { ...p, available: res.data.available } : p))\n      );\n    } catch (err) {\n      console.error(\"Failed to toggle availability:\", err.response?.data || err.message);\n    }\n  };\n\n  if (loading) return <p className=\"text-center text-lg text-gray-600 animate-pulse\">Loading...</p>;\n  if (error) return <p className=\"text-center text-red-500 text-lg bg-red-100 p-4 rounded-lg shadow-md\">{error}</p>;\n\n  return (\n    <div className=\"p-8 bg-gray-100 min-h-screen\">\n      <h2 className=\"text-3xl font-bold mb-8 text-center\">Admin Dashboard</h2>\n\n      <section className=\"mb-12\">\n        <h3 className=\"text-2xl font-semibold mb-4\">Manage Products</h3>\n        <form onSubmit={handleAddProduct} className=\"bg-white p-6 rounded shadow mb-6\">\n          <h4 className=\"text-xl font-bold mb-4\">Add New Product</h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <input\n              type=\"text\"\n              placeholder=\"Name (English)\"\n              onChange={(e) => setNewProduct({ ...newProduct, name: { ...newProduct.name, en: e.target.value } })}\n              required\n              className=\"p-3 border rounded\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Name (Amharic)\"\n              onChange={(e) => setNewProduct({ ...newProduct, name: { ...newProduct.name, am: e.target.value } })}\n              required\n              className=\"p-3 border rounded\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Name (Tigrinya)\"\n              onChange={(e) => setNewProduct({ ...newProduct, name: { ...newProduct.name, ti: e.target.value } })}\n              required\n              className=\"p-3 border rounded\"\n            />\n            <textarea\n              placeholder=\"Description (English)\"\n              onChange={(e) => setNewProduct({ ...newProduct, description: { ...newProduct.description, en: e.target.value } })}\n              required\n              className=\"p-3 border rounded md:col-span-3\"\n            ></textarea>\n            <textarea\n              placeholder=\"Description (Amharic)\"\n              onChange={(e) => setNewProduct({ ...newProduct, description: { ...newProduct.description, am: e.target.value } })}\n              required\n              className=\"p-3 border rounded md:col-span-3\"\n            ></textarea>\n            <textarea\n              placeholder=\"Description (Tigrinya)\"\n              onChange={(e) => setNewProduct({ ...newProduct, description: { ...newProduct.description, ti: e.target.value } })}\n              required\n              className=\"p-3 border rounded md:col-span-3\"\n            ></textarea>\n            <input\n              type=\"number\"\n              placeholder=\"Price\"\n              onChange={(e) => setNewProduct({ ...newProduct, price: e.target.value })}\n              required\n              className=\"p-3 border rounded\"\n            />\n            <input\n              type=\"file\"\n              onChange={(e) => setNewProduct({ ...newProduct, image: e.target.files[0] })}\n              required\n              className=\"p-3 border rounded md:col-span-2\"\n            />\n          </div>\n          <button type=\"submit\" className=\"mt-4 bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\">Add Product</button>\n        </form>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {products.map((product) => (\n            <div key={product._id} className=\"bg-white p-4 rounded shadow\">\n              <h4 className=\"text-lg font-bold break-words whitespace-pre-wrap\">\n                {product.name?.en || \"Unnamed Product\"}\n              </h4>\n              <p className=\"text-gray-600\">Price: Birr {product.price || \"N/A\"}</p>\n              <p className={`mt-2 text-sm font-bold ${product.available ? \"text-green-500\" : \"text-red-500\"}`}>\n                {product.available ? \"Available\" : \"Unavailable\"}\n              </p>\n              <div className=\"flex space-x-2 mt-2\">\n                <button\n                  onClick={() => handleToggleAvailability(product._id, product.available)}\n                  className=\"text-blue-600 hover:underline\"\n                >\n                  Toggle Availability\n                </button>\n                <button\n                  onClick={() => {\n                    setEditingProduct(product);\n                    setUpdatedProduct({ ...product });\n                  }}\n                  className=\"text-green-600 hover:underline\"\n                >\n                  Edit\n                </button>\n                <button onClick={() => handleDeleteProduct(product._id)} className=\"text-red-600 hover:underline\">\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Edit Product Form */}\n        {editingProduct && updatedProduct && (\n          <form\n            onSubmit={handleUpdateProduct}\n            className=\"bg-white p-6 rounded shadow my-6\"\n          >\n            <h4 className=\"text-xl font-bold mb-4\">Edit Product: {editingProduct.name?.en}</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              {/* Name inputs */}\n              <input type=\"text\" value={updatedProduct.name.en} onChange={(e) => setUpdatedProduct({ ...updatedProduct, name: { ...updatedProduct.name, en: e.target.value } })} className=\"p-3 border rounded\" placeholder=\"Name (English)\" />\n              <input type=\"text\" value={updatedProduct.name.am} onChange={(e) => setUpdatedProduct({ ...updatedProduct, name: { ...updatedProduct.name, am: e.target.value } })} className=\"p-3 border rounded\" placeholder=\"Name (Amharic)\" />\n              <input type=\"text\" value={updatedProduct.name.ti} onChange={(e) => setUpdatedProduct({ ...updatedProduct, name: { ...updatedProduct.name, ti: e.target.value } })} className=\"p-3 border rounded\" placeholder=\"Name (Tigrinya)\" />\n              {/* Description inputs */}\n              <textarea value={updatedProduct.description.en} onChange={(e) => setUpdatedProduct({ ...updatedProduct, description: { ...updatedProduct.description, en: e.target.value } })} className=\"p-3 border rounded md:col-span-3\" placeholder=\"Description (English)\"></textarea>\n              <textarea value={updatedProduct.description.am} onChange={(e) => setUpdatedProduct({ ...updatedProduct, description: { ...updatedProduct.description, am: e.target.value } })} className=\"p-3 border rounded md:col-span-3\" placeholder=\"Description (Amharic)\"></textarea>\n              <textarea value={updatedProduct.description.ti} onChange={(e) => setUpdatedProduct({ ...updatedProduct, description: { ...updatedProduct.description, ti: e.target.value } })} className=\"p-3 border rounded md:col-span-3\" placeholder=\"Description (Tigrinya)\"></textarea>\n              {/* Image input */}\n              <input type=\"file\" onChange={(e) => setUpdatedProduct({ ...updatedProduct, image: e.target.files[0] })} className=\"p-3 border rounded md:col-span-3\" />\n            </div>\n            <div className=\"mt-4 flex space-x-4\">\n              <button\n                type=\"submit\"\n                className=\"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\"\n              >\n                Update Product\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setEditingProduct(null);\n                  setUpdatedProduct(null);\n                }}\n                className=\"bg-gray-300 px-6 py-2 rounded hover:bg-gray-400\"\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        )}\n      </section>\n\n      <section className=\"mb-12\">\n        <h3 className=\"text-2xl font-semibold mb-4\">Manage News</h3>\n        <form onSubmit={handleAddNews} className=\"bg-white p-6 rounded shadow mb-6\">\n          <h4 className=\"text-xl font-bold mb-4\">Add New News</h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <input\n              type=\"text\"\n              placeholder=\"Title (English)\"\n              onChange={(e) => setNewNews({ ...newNews, title: { ...newNews.title, en: e.target.value } })}\n              required\n              className=\"p-3 border rounded\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Title (Amharic)\"\n              onChange={(e) => setNewNews({ ...newNews, title: { ...newNews.title, am: e.target.value } })}\n              required\n              className=\"p-3 border rounded\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Title (Tigrinya)\"\n              onChange={(e) => setNewNews({ ...newNews, title: { ...newNews.title, ti: e.target.value } })}\n              required\n              className=\"p-3 border rounded\"\n            />\n            <textarea\n              placeholder=\"Content (English)\"\n              onChange={(e) => setNewNews({ ...newNews, content: { ...newNews.content, en: e.target.value } })}\n              required\n              className=\"p-3 border rounded md:col-span-3\"\n            ></textarea>\n            <textarea\n              placeholder=\"Content (Amharic)\"\n              onChange={(e) => setNewNews({ ...newNews, content: { ...newNews.content, am: e.target.value } })}\n              required\n              className=\"p-3 border rounded md:col-span-3\"\n            ></textarea>\n            <textarea\n              placeholder=\"Content (Tigrinya)\"\n              onChange={(e) => setNewNews({ ...newNews, content: { ...newNews.content, ti: e.target.value } })}\n              required\n              className=\"p-3 border rounded md:col-span-3\"\n            ></textarea>\n            <input\n              type=\"file\"\n              onChange={(e) => setNewNews({ ...newNews, coverImage: e.target.files[0] })}\n              required\n              className=\"p-3 border rounded md:col-span-3\"\n            />\n          </div>\n          <button type=\"submit\" className=\"mt-4 bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\">Add News</button>\n        </form>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {news.map((item) => (\n            <div key={item._id} className=\"bg-white p-4 rounded shadow\">\n              <h4 className=\"text-lg font-bold break-words whitespace-pre-wrap\">\n                {item.title?.en || \"Untitled News\"}\n              </h4>\n              <div className=\"flex space-x-2 mt-2\">\n                <button\n                  onClick={() => {\n                    setEditingNews(item);\n                    setUpdatedNews({ ...item });\n                  }}\n                  className=\"text-green-600 hover:underline\"\n                >\n                  Edit\n                </button>\n                <button onClick={() => handleDeleteNews(item._id)} className=\"mt-2 text-red-600 hover:underline\">\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Edit News Form */}\n        {editingNews && updatedNews && (\n          <form\n            onSubmit={handleUpdateNews}\n            className=\"bg-white p-6 rounded shadow my-6\"\n          >\n            <h4 className=\"text-xl font-bold mb-4\">Edit News: {editingNews.title?.en}</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              {/* Title inputs */}\n              <input type=\"text\" value={updatedNews.title.en || ''} onChange={(e) => setUpdatedNews({ ...updatedNews, title: { ...updatedNews.title, en: e.target.value } })} className=\"p-3 border rounded\" placeholder=\"Title (English)\" />\n              <input type=\"text\" value={updatedNews.title.am || ''} onChange={(e) => setUpdatedNews({ ...updatedNews, title: { ...updatedNews.title, am: e.target.value } })} className=\"p-3 border rounded\" placeholder=\"Title (Amharic)\" />\n              <input type=\"text\" value={updatedNews.title.ti || ''} onChange={(e) => setUpdatedNews({ ...updatedNews, title: { ...updatedNews.title, ti: e.target.value } })} className=\"p-3 border rounded\" placeholder=\"Title (Tigrinya)\" />\n              {/* Content inputs */}\n              <textarea value={updatedNews.content.en || ''} onChange={(e) => setUpdatedNews({ ...updatedNews, content: { ...updatedNews.content, en: e.target.value } })} className=\"p-3 border rounded md:col-span-3\" placeholder=\"Content (English)\"></textarea>\n              <textarea value={updatedNews.content.am || ''} onChange={(e) => setUpdatedNews({ ...updatedNews, content: { ...updatedNews.content, am: e.target.value } })} className=\"p-3 border rounded md:col-span-3\" placeholder=\"Content (Amharic)\"></textarea>\n              <textarea value={updatedNews.content.ti || ''} onChange={(e) => setUpdatedNews({ ...updatedNews, content: { ...updatedNews.content, ti: e.target.value } })} className=\"p-3 border rounded md:col-span-3\" placeholder=\"Content (Tigrinya)\"></textarea>\n              {/* Image input */}\n              <input type=\"file\" onChange={(e) => setUpdatedNews({ ...updatedNews, coverImage: e.target.files[0] })} className=\"p-3 border rounded md:col-span-3\" />\n            </div>\n            <div className=\"mt-4 flex space-x-4\">\n              <button\n                type=\"submit\"\n                className=\"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\"\n              >\n                Update News\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setEditingNews(null);\n                  setUpdatedNews(null);\n                }}\n                className=\"bg-gray-300 px-6 py-2 rounded hover:bg-gray-400\"\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        )}\n      </section>\n    </div>\n  );\n}\n\nexport default AdminDashboard;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: '', // Use relative paths\n});\n\nexport default api;\n"],"names":["_editingProduct$name","_editingNews$title","navigate","useNavigate","products","setProducts","useState","news","setNews","loading","setLoading","error","setError","newProduct","setNewProduct","name","en","am","ti","description","price","image","newNews","setNewNews","title","content","coverImage","editingProduct","setEditingProduct","updatedProduct","setUpdatedProduct","editingNews","setEditingNews","updatedNews","setUpdatedNews","useEffect","localStorage","getItem","Promise","all","api","get","then","res","data","catch","err","Error","message","finally","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","formData","FormData","append","JSON","stringify","console","log","Object","fromEntries","token","post","headers","Authorization","concat","prev","target","reset","_err$response","response","type","placeholder","onChange","_objectSpread","value","required","files","map","product","_product$name","available","onClick","id","currentStatus","put","p","_id","_err$response5","handleToggleAvailability","delete","filter","handleDeleteProduct","File","patch","_err$response3","_err$response2","item","_item$title","n","handleDeleteNews","_err$response4","axios","create","baseURL"],"sourceRoot":""}